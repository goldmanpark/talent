upstream backend {
  server nodejs-server:8080; #nodejs-server: docker service name
}

upstream frontend {
  server react-app:8081; #react-app: docker service name
}

server{
  listen 80;    #user entrypoint : localhost:80
  
  location / {
    proxy_pass         http://frontend;
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
  }

  location /home {
    proxy_pass         http://backend;
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;

    proxy_connect_timeout 600;
    proxy_send_timeout    600;
    proxy_read_timeout    600;
    send_timeout          600;
  }

  location /home/ {
    # if ($args ~* "history/?param1=val1&param2=val2&param3=val3") {
    #     rewrite ^ http://backend/home/history/$arg_param1/$arg_param2/$arg_param3? last;
    # }
    # if ($args ~* "statistics/?param1=val1&param2=val2&param3=val3") {
    #     rewrite ^ http://backend/home/statistics/$arg_param1/$arg_param2/$arg_param3? last;
    # }
    rewrite            http://backend/? last; 
    proxy_pass         http://backend;
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;

    proxy_connect_timeout 600;
    proxy_send_timeout    600;
    proxy_read_timeout    600;
    send_timeout          600;
  }
}